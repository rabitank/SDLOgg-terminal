{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) 启动",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [],
            "cwd": "${workspaceRoot}",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "${env:PATH}:${command:cmake.getLaunchTargetDirectory}",
                
                },
                {
                    "name": "OTHER_VALUE",
                    "value": "Something something"
                }
            ],
            "internalConsoleOptions": "openOnFirstSessionStart",
            "externalConsole": true,
            "MIMode": "gdb",
            //"miDebuggerPath": "D:/CppMinGW/mingw64/bin",
            "setupCommands": [
                {
                    "description": "为 gdb 启用整齐打印",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "将反汇编风格设置为 Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        // {
        //     "name": "gnu",
        //     "type": "cppvsdbg",
        //     "request": "launch",
        //     // Resolved by CMake Tools:
        //     "program": "${command:cmake.launchTargetPath}",
        //     "args": [],
        //     "cwd": "${workspaceRoot}",
        //     "environment": [
        //         {
        //             // add the directory where our target was built to the PATHs
        //             // it gets resolved by CMake Tools:
        //             "name": "PATH",
        //             "value": "${env:PATH}:${command:cmake.getLaunchTargetDirectory}"
        //         },
        //         {
        //             "name": "OTHER_VALUE",
        //             "value": "Something something"
        //         }
        //     ],
        //     "console": "newExternalWindow",
        // }

    ]
}
// 单独的bug标志->快速debug模式.会使用cmake-tools的setting.json(项目)和setting.json(user)中的cmake.debugconfig设置 (启动配置的key是通用的)
// debug+play标志->更特化的细分启动配置 会使用launch.json(项目)的配置,需要选择方案,配合setting.json(项目)和setting.json(user)中的cmake.debugconfig设置一起启动
// 目前快速debug就行了..

// F5 启动调试配置(自动选择)

// $ {workspaceFolder}-在VS Code中打开的文件夹的路径
// $ {workspaceFolderBasename}-在VS Code中打开的文件夹名称，不带任何斜杠（/）
// $ {file}-当前打开的文件
// $ {relativeFile}-当前相对于workspaceFolder打开的文件
// $ {relativeFileDirname}-当前打开文件的目录名，相对于workspaceFolder
// $ {fileBasename}-当前打开的文件的基本名称
// $ {fileBasenameNoExtension}-当前打开的文件的基本名称，没有文件扩展名
// $ {fileDirname}-当前打开的文件的目录名
// $ {fileExtname}-当前打开的文件的扩展名
// $ {cwd}-启动时任务运行程序的当前工作目录
// $ {lineNumber}-活动文件中当前选择的行号
// $ {selectedText}-活动文件中的当前选定文本
// $ {execPath}-正在运行的VS Code可执行文件的路径
// $ {defaultBuildTask}-默认构建任务的名称